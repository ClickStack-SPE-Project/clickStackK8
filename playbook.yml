- name: Deploy to Kubernetes
  hosts: local
  vars:
    dockerhub_user: "{{ dockerhub_user }}"
    aws_access_key_id: "{{ aws_access_key_id }}"
    aws_secret_access_key: "{{ aws_secret_access_key }}"
    aws_region: "{{ aws_region }}"
    s3_bucket_name: "{{ s3_bucket_name }}"
  tasks:
    - name: Install Minikube on Linux
      block:
        - name: Download Minikube binary
          get_url:
            url: "https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64"
            dest: /usr/local/bin/minikube
            mode: '0755'
          when: ansible_os_family == 'Linux'

        - name: Start Minikube
          command: minikube start
          when: ansible_os_family == 'Linux'

    - name: Ensure kubectl is using Minikube context
      command: kubectl config use-context minikube    

    - name: Install Kubernetes Ansible modules
      ansible.builtin.pip:
        name: kubernetes

    - name: Create PersistentVolume
      copy:
        content: |
          apiVersion: v1
          kind: PersistentVolume
          metadata:
            name: clickstack-db-pv
          spec:
            capacity:
              storage: 1Gi
            accessModes:
              - ReadWriteOnce
            hostPath:
              path: /mnt/data/clickstack-db
        dest: ./persistent_volume.yml

    - name: Apply PersistentVolume
      command: kubectl apply -f ./persistent_volume.yml

    - name: Create PersistentVolumeClaim
      copy:
        content: |
          apiVersion: v1
          kind: PersistentVolumeClaim
          metadata:
            name: clickstack-db-pvc
          spec:
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: 1Gi
        dest: ./persistent_volume_claim.yml

    - name: Apply PersistentVolumeClaim
      command: kubectl apply -f ./persistent_volume_claim.yml

    - name: Create Kubernetes service manifests
      copy:
        content: |
          apiVersion: v1
          kind: Service
          metadata:
            name: clickstackdb
          spec:
            ports:
              - port: 3306
            selector:
              app: clickstackdb
        dest: ./db_service.yml

    - name: Apply MySQL Service
      command: kubectl apply -f ./db_service.yml

    - name: Create Kubernetes manifests
      template:
        src: k8s/deployment.yml.j2
        dest: ./deployment.yml
      with_items:
        - clickstackbackend
        - clickstackfrontend
        - clickstack_db

    - name: Apply Kubernetes manifests
      command: kubectl apply -f ./deployment.yml --validate=false

    - name: Create Frontend Service manifest
      copy:
        content: |
          apiVersion: v1
          kind: Service
          metadata:
            name: clickstackfrontend
          spec:
            type: LoadBalancer
            selector:
              app: clickstackfrontend
            ports:
              - protocol: TCP
                port: 80
                targetPort: 80
        dest: ./frontend_service.yml

    - name: Apply Frontend Service
      command: kubectl apply -f ./frontend_service.yml  
